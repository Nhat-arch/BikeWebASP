@model App.Models.ProductViewModel;
@{
    ViewData["title"] = "Thêm sản phẩm";
}
<div class="row">
    <div class="col-md-5">
        <div class="panel panel-default">
            <div class="panel-body">
                <form id="form1" asp-area="Admin" asp-controller="Product" asp-action="ProductAdd" method="post"
                    enctype="multipart/form-data">
                    <div>
                        @if (TempData["Success"] != null)
                        {
                            <div class="alert alert-success">
                                @TempData["Success"]
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <label class="control-label">Tên sản phẩm</label>
                        <input asp-for="Product.ProductName" class="form-control" />
                        <span asp-validation-for="Product.ProductName" class="text-danger"></span>
                        @if (TempData["TonTai"] != null)
                        {
                            <div class="alert alert-danger">
                                @TempData["TonTai"]
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <label class="control-label">Hãng sản xuất</label>
                        <select asp-for="Product.BrandId" class="form-control">
                            <option value="0">-- Chọn hãng sản xuất --</option>
                            @foreach (var b in Model.BrandList)
                            {
                                <option value="@b.BrandId">@b.BrandName</option>
                            }
                        </select>
                        <span asp-validation-for="Product.BrandId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Loại sản phẩm</label>
                        <select asp-for="Product.TypeId" class="form-control">
                            <option value="0">-- Chọn loại sản phẩm --</option>
                            @foreach (var t in Model.TypeList)
                            {
                                <option value="@t.TypeId">@t.TypeName</option>
                            }
                        </select>
                        <span asp-validation-for="Product.TypeId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Đơn giá</label>
                        <input asp-for="Product.ProductPrice" class="form-control" type="number" step="1000" />
                        <span asp-validation-for="Product.ProductPrice" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Mô tả</label>
                        <textarea asp-for="Product.ProductDescription" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Product.ProductDescription" class="text-danger"></span>
                    </div>
                    @* upload img  *@
                    <div class="form-group">
                        <label class="control-label">Hình ảnh</label>
                        <input type="hidden" id="imgUploadCount" name="imgUploadCount" value="1">

                        <div id="imgContainer" class="preview">
                            <input style="margin-top: 4px;" id="imgUpload1" name="file[]" type="file" accept=".jpg,.gif,.png">
                        </div>

                        <!-- Preview ảnh -->
                        <div id="preview" style="display:flex;flex-wrap:wrap;gap:10px;margin-top:10px;"></div>

                        @if (TempData["ImageError"] != null)
                        {
                            <span class="text-danger">@TempData["ImageError"]</span>
                        }
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-plus"></i> Thêm sản phẩm
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-body">
                <form id="form3" asp-area="Admin" asp-controller="Product" asp-action="BrandAdd" method="post">
                    <div class="form-group">
                        <label class="control-label">Thêm hãng sản xuất</label>
                        <input asp-for="Brand.BrandName" type="text" class="form-control" />
                        <span asp-validation-for="Brand.BrandName" class="text-danger"></span>
                        @if (TempData["BrandSuccess"] != null)
                        {
                            <span class="text-success">
                                @TempData["BrandSuccess"]
                            </span>
                        }
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-plus"></i> Thêm
                        </button>
                    </div>
                </form>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-body">
                <form id="form2" asp-area="Admin" asp-controller="Product" asp-action="TypeAdd" method="post">
                    <div class="form-group">
                        <label class="control-label">Thêm loại sản phẩm </label>
                        <input asp-for="Type.TypeName" type="text" class="form-control" />
                        <span asp-validation-for="Type.TypeName" class="text-danger"></span>
                        @if (TempData["TypeSuccess"] != null)
                        {
                            <span class="text-success">
                                @TempData["TypeSuccess"]
                            </span>
                        }
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-plus"></i> Thêm
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    const preview = document.getElementById('preview');
    const container = document.getElementById('imgContainer');
    const imgUploadCount = document.getElementById('imgUploadCount');
    let fileMap = [];

    // === HÀM HIỂN THỊ PREVIEW ===
    function renderPreview() {
        preview.innerHTML = '';
        fileMap.forEach((item, index) => {
            const reader = new FileReader();
            reader.onload = (e) => {
                const imgBox = document.createElement('div');
                imgBox.classList.add('img-box');
                imgBox.style.position = 'relative';
                imgBox.style.display = 'inline-block';
                imgBox.style.textAlign = 'center';
                imgBox.innerHTML = `
                    <img src="${e.target.result}" 
                         style="width:100px;height:100px;object-fit:cover;border-radius:6px;border:1px solid #ccc;">
                    <div style="font-size:12px;max-width:100px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;">${item.file.name}</div>
                    <button class="remove-btn" 
                            data-index="${index}" 
                            style="position:absolute;top:2px;right:2px;background:red;color:white;border:none;border-radius:50%;cursor:pointer;width:22px;height:22px;">&times;</button>
                `;
                preview.appendChild(imgBox);
            };
            reader.readAsDataURL(item.file);
        });
    }

    // === HÀM KIỂM TRA FILE HỢP LỆ ===
    function validateFiles(files) {
        const validExtensions = ['jpg', 'jpeg', 'png'];
        const maxSizeMB = 5;

        for (const file of files) {
            const ext = file.name.split('.').pop().toLowerCase();
            const sizeMB = file.size / (1024 * 1024);

            if (!validExtensions.includes(ext)) {
                alert(`❌ File "${file.name}" không đúng định dạng (.jpg, .jpeg, .png)!`);
                return false;
            }

            if (sizeMB > maxSizeMB) {
                alert(`⚠️ File "${file.name}" vượt quá dung lượng 5MB!`);
                return false;
            }
        }
        return true;
    }

    // === XỬ LÝ KHI NGƯỜI DÙNG CHỌN ẢNH ===
    document.getElementById('imgUpload1').oninput = function () {
        const count = parseInt(imgUploadCount.value);
        const newFiles = Array.from(this.files);

        // Kiểm tra hợp lệ
        if (!validateFiles(newFiles)) {
            this.value = '';
            return;
        }

        // Thêm file vào danh sách
        newFiles.forEach(file => {
            fileMap.push({ file, inputId: this.id });
        });
        renderPreview();

        // Giới hạn tối đa 5 ảnh
        if (fileMap.length >= 5) {
            alert("Chỉ được chọn tối đa 5 ảnh!");
            return;
        }

        // Tạo input mới
        const newInput = document.createElement('input');
        newInput.id = 'imgUpload' + (count + 1);
        newInput.name = 'file[]';
        newInput.type = 'file';
        newInput.accept = '.jpg,.jpeg,.png';
        newInput.style.marginTop = '4px';

        // Nút xóa input
        const remove = document.createElement('button');
        remove.innerHTML = 'X';
        remove.type = 'button';
        remove.style.float = 'right';
        remove.style.marginLeft = '5px';
        remove.style.background = '#ccc';
        remove.style.color = 'white';
        remove.style.border = 'none';
        remove.style.borderRadius = '3px';
        remove.style.cursor = 'pointer';

        remove.onclick = function (event) {
            event.preventDefault();
            container.removeChild(newInput);
            container.removeChild(remove);
            fileMap = fileMap.filter(f => f.inputId !== newInput.id);
            renderPreview();
        };

        container.prepend(newInput, remove);
        imgUploadCount.value = count + 1;
        newInput.oninput = this.oninput;
        this.oninput = null;
    };

    // === XÓA ẢNH Ở PREVIEW VÀ INPUT LIÊN QUAN ===
    preview.addEventListener('click', function (e) {
        if (e.target.classList.contains('remove-btn')) {
            const index = e.target.getAttribute('data-index');
            const targetInputId = fileMap[index].inputId;
            fileMap.splice(index, 1);
            renderPreview();

            const inputToRemove = document.getElementById(targetInputId);
            const nextSibling = inputToRemove?.nextSibling;
            if (inputToRemove) {
                container.removeChild(inputToRemove);
                if (nextSibling?.tagName === 'BUTTON') container.removeChild(nextSibling);
            }
        }
    });
</script>
}